
server.port = 8084

#host.docker.internal <-- namest localhost spodi da dela baza znotri docker imagea
#spring.datasource.url=jdbc:postgresql://localhost:5433/teamManagementDb
#spring.datasource.username=teamManagementPostgres
#spring.datasource.password=rso2020Group25

spring.application.name=teamManagementService

#spring.datasource.url=jdbc:postgresql://dumbo.db.elephantsql.com:5432/mcvjtidy
#spring.datasource.username=mcvjtidy
#spring.datasource.password=qtUgDhVXxq9X1s7i3c0Jqy9r_lzcaAtv

spring.datasource.url=${DBURL}
spring.datasource.username=${DBUSERNAME}
spring.datasource.password=${DBPASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.hbm2ddl.auto=update

management.endpoints.web.exposure.include=health,prometheus, metrics
management.endpoints.web.base-path=/api/v1/checks
management.endpoint.health.show-details=always
management.endpoint.metrics.cache.time-to-live=10s
management.endpoint.health.probes.enabled=true

logging.config=classpath:logback.xml
env.type=development
#spring.datasource.hikari.connection-timeout=5000


